<?php
/**
 * @file
 * Code for the lightning_panels feature.
 */

include_once 'lightning_panels.features.inc';

/**
 *  Implements hook_post_features_enable_feature().
 */
function lightning_panels_post_features_enable_feature($component) {
  // Log components as they are enabled.
  watchdog('component', 'lightning_panels enabled ' . $component . ' component');
}

/**
 * Implements hook_pre_features_rebuild().
 */
function lightning_panels_pre_features_rebuild($component) {
  if ($component == 'user_permission') {
    drupal_static_reset('panelizer_entity_plugin_get_handler');
  }
}


/**
 * Implements hook_node_update().
 */
function lightning_panels_node_update($node) {
  if (!empty($node->old_vid)) {
    $old_did = db_query("SELECT did FROM {panelizer_entity} WHERE entity_id = :nid AND revision_id = :oldvid ORDER BY revision_id DESC",
        array(":nid" => $node->nid, ":oldvid" => $node->old_vid))
      ->fetchField();
    if (!empty($old_did) && !empty($node->panelizer['page_manager']) && empty($node->panelizer['page_manager']->did)) {
      $node->panelizer['page_manager']->did = $old_did;
    }
  }
}

/**
 * Implements hook_ctools_render_alter().
 * @todo: Remove this abomination of a hack after resolving
 *        http://www.drupal.org/node/1402860
 */
function lightning_panels_ctools_render_alter(&$info, &$page, &$context) {
  $data = array_values($context['contexts']);
  if (isset($data[0]->data)) {
    $entity = $data[0]->data;
    if (isset($entity->nid) && isset($entity->panelizer)) {
      $default_name = 'node:' . $entity->type . ':default';
      $panelizer_entity = $entity->panelizer['page_manager'];
      if ($panelizer_entity->name == $default_name && isset($panelizer_entity->did)) {
        $query = db_query("UPDATE {panelizer_entity} SET did = :def WHERE entity_id = :nid AND revision_id = :vid",
            array(":def" => "0", ":nid" => $entity->nid, ":vid" => $entity->vid));
        drupal_goto($_GET['q']);
      }
    }
  }
}

